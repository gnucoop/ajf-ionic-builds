{"version":3,"sources":["src/ionic/ionic-barcode.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","ionic","barcode","ng","common","core","forms","ngxTranslate","angular","tslib","this","core$1","common$1","BARCODE_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","AjfBarcodeComponent","multi","_super","cdr","renderer","call","__extends","prototype","onSelectSegment","segment","toggle","decorators","type","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","providers","styles","ctorParameters","ChangeDetectorRef","Renderer2","AjfBarcode","AjfBarcodeModule","NgModule","imports","CommonModule","FormsModule","TranslateModule","IonicModule","AjfCommonModule","declarations","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,uBAAwBA,QAAQ,kBAAmBA,QAAQ,oBAAqBA,QAAQ,SAAUA,QAAQ,sBACjQ,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,qBAAsB,CAAC,UAAW,kBAAmB,gBAAiB,iBAAkB,sBAAuB,iBAAkB,mBAAoB,QAAS,qBAAsBJ,GAC9MA,IAAzBD,EAASA,GAAUO,MAAsBC,IAAMR,EAAOQ,KAAO,GAAIR,EAAOQ,IAAIC,MAAQT,EAAOQ,IAAIC,OAAS,GAAIT,EAAOQ,IAAIC,MAAMC,QAAU,IAAKV,EAAOW,GAAGC,OAAQZ,EAAOW,GAAGE,KAAMb,EAAOW,GAAGG,MAAOd,EAAOe,aAAaF,KAAMb,EAAOS,MAAMO,QAAShB,EAAOW,GAAGE,KAAKD,OAAQZ,EAAOiB,MAAOjB,EAAOW,GAAGE,KAAKH,SAHxS,CAIEQ,MAAM,SAAWhB,EAASU,EAAQC,EAAMC,EAAOK,EAAQH,EAASI,EAAUH,EAAOP,GAAW;;;;;;;;;;;;;;;;;;;;;OAuB1F,IAAIW,EAAiC,CACjCC,QAASR,EAAMS,kBACfC,YAAaX,EAAKY,YAAW,WAAc,OAAOC,KAClDC,OAAO,GAEPD,EAAqC,SAAUE,GAE/C,SAASF,EAAoBG,EAAKC,GAC9B,OAAOF,EAAOG,KAAKb,KAAMW,EAAKC,IAAaZ,KAoB/C,OAtBAD,EAAMe,UAAUN,EAAqBE,GAIrCF,EAAoBO,UAAUC,gBAAkB,SAAUC,GACtDjB,KAAKkB,OAASD,GAElBT,EAAoBW,WAAa,CAC7B,CAAEC,KAAMzB,EAAK0B,UAAWC,KAAM,CAAC,CACnBC,SAAU,cACVC,SAAU,siCACVC,cAAe9B,EAAK+B,kBAAkBC,KACtCC,gBAAiBjC,EAAKkC,wBAAwBC,OAC9CC,UAAW,CAAC5B,GACZ6B,OAAQ,CAAC,sZAIzBxB,EAAoByB,eAAiB,WAAc,MAAO,CACtD,CAAEb,KAAMzB,EAAKuC,mBACb,CAAEd,KAAMzB,EAAKwC,aAEV3B,EAvB6B,CAwBtChB,EAAQ4C,YAuBNC,EAAkC,WAClC,SAASA,KAmBT,OAjBAA,EAAiBlB,WAAa,CAC1B,CAAEC,KAAMzB,EAAK2C,SAAUhB,KAAM,CAAC,CAClBiB,QAAS,CACL7C,EAAO8C,aACP5C,EAAM6C,YACNxC,EAAOyC,gBACP5C,EAAQ6C,YACRzC,EAAS0C,iBAEbC,aAAc,CACVrC,GAEJxB,QAAS,CACLwB,OAIb6B,EApB0B;;;;;;;;;;;;;;;;;;;;;;AAiDrCrD,EAAQwB,oBAAsBA,EAC9BxB,EAAQqD,iBAAmBA,EAC3BrD,EAAQmB,+BAAiCA,EAEzC2C,OAAOC,eAAe/D,EAAS,aAAc,CAAEgE,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@ngx-translate/core'), require('@ionic/angular'), require('@ajf/core/common'), require('tslib'), require('@ajf/core/barcode')) :\n    typeof define === 'function' && define.amd ? define('@ajf/ionic/barcode', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@ngx-translate/core', '@ionic/angular', '@ajf/core/common', 'tslib', '@ajf/core/barcode'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.ionic = global.ajf.ionic || {}, global.ajf.ionic.barcode = {}), global.ng.common, global.ng.core, global.ng.forms, global.ngxTranslate.core, global.ionic.angular, global.ng.core.common, global.tslib, global.ng.core.barcode));\n}(this, (function (exports, common, core, forms, core$1, angular, common$1, tslib, barcode) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var BARCODE_CONTROL_VALUE_ACCESSOR = {\n        provide: forms.NG_VALUE_ACCESSOR,\n        useExisting: core.forwardRef(function () { return AjfBarcodeComponent; }),\n        multi: true\n    };\n    var AjfBarcodeComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfBarcodeComponent, _super);\n        function AjfBarcodeComponent(cdr, renderer) {\n            return _super.call(this, cdr, renderer) || this;\n        }\n        AjfBarcodeComponent.prototype.onSelectSegment = function (segment) {\n            this.toggle = segment;\n        };\n        AjfBarcodeComponent.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'ajf-barcode',\n                        template: \"<ng-container *ngIf=\\\"value; else barcode\\\">\\n  <div class=\\\"ajf-code-container\\\">\\n    <span>{{ value }}</span>\\n    <ion-button (click)=\\\"reset()\\\" [disabled]=\\\"readonly\\\">\\n      <ion-icon slot=\\\"icon-only\\\" style=\\\"transform: rotate(90deg);\\\" name=\\\"reorder\\\"></ion-icon>\\n    </ion-button>\\n  </div>\\n</ng-container>\\n<ng-template #barcode>\\n  <ion-segment [value]=\\\"toggle\\\">\\n    <ion-segment-button (click)=\\\"toggle = 'drop' ; fileInput.click()\\\" layout=\\\"icon-end\\\" [attr.disabled]=\\\"readonly\\\">\\n      <ion-icon name=\\\"add-circle-outline\\\"></ion-icon>\\n      <span translate>Upload image </span>\\n      <input #fileInput type=\\\"file\\\" (change)=\\\"onSelectFile($event)\\\" multiple style=\\\"display:none;\\\" />\\n    </ion-segment-button>\\n    <ion-segment-button (click)=\\\"toggle = 'camera'\\\" [attr.disabled]=\\\"readonly\\\">\\n      <span translate>Camera</span>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <ng-container *ngIf=\\\"toggle == 'camera'\\\">\\n    <div ajfVideoDirective [source]=\\\"videoSource\\\" class=\\\"left\\\" (isInit)=\\\"takeSnapshot()\\\"></div>\\n  </ng-container>\\n</ng-template>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        providers: [BARCODE_CONTROL_VALUE_ACCESSOR],\n                        styles: [\"ajf-barcode ion-segment{width:fit-content}ajf-barcode .ajf-code-container{display:inline-flex;flex-direction:row;flex-wrap:wrap;justify-content:center;align-content:stretch;align-items:center}ajf-barcode .ajf-code-container button{margin-left:10px}ajf-barcode .ajf-drop-container{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:flex-start;align-content:stretch;align-items:stretch}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfBarcodeComponent.ctorParameters = function () { return [\n            { type: core.ChangeDetectorRef },\n            { type: core.Renderer2 }\n        ]; };\n        return AjfBarcodeComponent;\n    }(barcode.AjfBarcode));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfBarcodeModule = /** @class */ (function () {\n        function AjfBarcodeModule() {\n        }\n        AjfBarcodeModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            forms.FormsModule,\n                            core$1.TranslateModule,\n                            angular.IonicModule,\n                            common$1.AjfCommonModule\n                        ],\n                        declarations: [\n                            AjfBarcodeComponent,\n                        ],\n                        exports: [\n                            AjfBarcodeComponent,\n                        ],\n                    },] }\n        ];\n        return AjfBarcodeModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfBarcodeComponent = AjfBarcodeComponent;\n    exports.AjfBarcodeModule = AjfBarcodeModule;\n    exports.BARCODE_CONTROL_VALUE_ACCESSOR = BARCODE_CONTROL_VALUE_ACCESSOR;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ionic-barcode.umd.js.map\n"]}