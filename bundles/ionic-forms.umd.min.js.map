{"version":3,"sources":["src/ionic/ionic-forms.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ajf","ionic","forms","tslib","ng","core","angular","rxjs","operators","common","gic","ngxTranslate","barcode","calendar","checkboxGroup","pageSlider","time","this","i0","forms$1","angular$1","common$1","AjfWarningAlertService","_alertCtrl","prototype","showWarningAlertPrompt","warnings","_this","Observable","subscriber","create","header","message","join","buttons","text","handler","next","result","complete","then","alert","present","decorators","type","Injectable","ctorParameters","AlertController","AjfBooleanFieldComponent","_super","cdr","service","was","call","__extends","Component","args","template","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","styles","ChangeDetectorRef","AjfFormRendererService","AjfBaseFieldComponent","AjfDateFieldComponent","AjfDateInputFieldComponent","_dvs","onChange","event","input","detail","val","value","length","_minDateStr","_maxDateStr","_onInstanceChange","transform","instance","node","minDate","maxDate","AjfDateValueStringPipe","propDecorators","ViewChild","IonInput","static","AjfEmptyFieldComponent","AjfBarcodeFieldComponent","AjfFormulaFieldComponent","_onChangeEvt","EventEmitter","_onChangeSub","Subscription","EMPTY","control$","control","pipe","filter","switchMap","map","subscribe","_a","parseFloat","e","setValue","valueChanges","startWith","ngOnDestroy","unsubscribe","emit","AjfInputFieldComponent","AjfMultipleChoiceFieldComponent","searchThreshold","Number","Optional","Inject","AJF_SEARCH_ALERT_THRESHOLD","AjfFieldWithChoicesComponent","AjfNumberFieldComponent","_setValueEvt","_setValueSub","defer","ngOnInit","withLatestFrom","_b","__read","isNaN","AjfSingleChoiceFieldComponent","AjfTableFieldComponent","AjfTextareaFieldComponent","AjfTimeFieldComponent","AjfFieldService","componentsMap","AjfFieldType","String","component","Text","Boolean","Formula","Date","DateInput","Table","Empty","SingleChoice","MultipleChoice","Time","Barcode","providedIn","ɵprov","AjfFieldService_Factory","token","AjfFormField","cfr","fieldService","selector","ComponentFactoryResolver","AjfFormRenderer","rendererService","_longSlide","_viewInitEvt","_scrollFinishSub","delayWhen","formGroup","formSlider","pageScrollFinish","_","_updateLongSlide","Object","defineProperty","get","enumerable","configurable","ngAfterViewInit","longSlide","isCurrentPageLong","_changeDetectorRef","markForCheck","AjfFormPage","Directive","AjfSelectHasSearchBarPipe","filteredChoices","Pipe","name","AjfSelectUseVirtualScroll","vsThreshold","AjfFormsModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","GicModule","TranslateModule","AjfCommonModule","AjfCalendarModule","AjfBarcodeModule","AjfCheckboxGroupModule","AjfPageSliderModule","AjfTimeModule","declarations","entryComponents","ɵajf_src_ionic_forms_forms_a","ɵajf_src_ionic_forms_forms_b","ɵajf_src_ionic_forms_forms_c","ɵajf_src_ionic_forms_forms_d","ɵajf_src_ionic_forms_forms_e"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@ajf/core/forms'), require('@angular/core'), require('@ionic/angular'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@angular/forms'), require('@gic/angular'), require('@ngx-translate/core'), require('@ajf/core/common'), require('@ajf/ionic/barcode'), require('@ajf/ionic/calendar'), require('@ajf/ionic/checkbox-group'), require('@ajf/ionic/page-slider'), require('@ajf/ionic/time')) :\n    typeof define === 'function' && define.amd ? define('@ajf/ionic/forms', ['exports', 'tslib', '@ajf/core/forms', '@angular/core', '@ionic/angular', 'rxjs', 'rxjs/operators', '@angular/common', '@angular/forms', '@gic/angular', '@ngx-translate/core', '@ajf/core/common', '@ajf/ionic/barcode', '@ajf/ionic/calendar', '@ajf/ionic/checkbox-group', '@ajf/ionic/page-slider', '@ajf/ionic/time'], factory) :\n    (global = global || self, factory((global.ajf = global.ajf || {}, global.ajf.ionic = global.ajf.ionic || {}, global.ajf.ionic.forms = {}), global.tslib, global.ng.core.forms, global.ng.core, global.ionic.angular, global.rxjs, global.rxjs.operators, global.ng.common, global.ng.forms, global.gic.angular, global.ngxTranslate.core, global.ng.core.common, global.ng.ionic.barcode, global.ng.ionic.calendar, global.ng.ionic.checkboxGroup, global.ng.ionic.pageSlider, global.ng.ionic.time));\n}(this, (function (exports, tslib, forms, i0, angular, rxjs, operators, common, forms$1, angular$1, core, common$1, barcode, calendar, checkboxGroup, pageSlider, time) { 'use strict';\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfWarningAlertService = /** @class */ (function () {\n        function AjfWarningAlertService(_alertCtrl) {\n            this._alertCtrl = _alertCtrl;\n        }\n        AjfWarningAlertService.prototype.showWarningAlertPrompt = function (warnings) {\n            var _this = this;\n            return new rxjs.Observable(function (subscriber) {\n                _this._alertCtrl.create({\n                    header: 'Warning',\n                    message: warnings.join('\\n'),\n                    buttons: [\n                        {\n                            text: 'No',\n                            handler: function () {\n                                subscriber.next({ result: false });\n                                subscriber.complete();\n                            }\n                        },\n                        {\n                            text: 'Yes',\n                            handler: function () {\n                                subscriber.next({ result: true });\n                                subscriber.complete();\n                            }\n                        }\n                    ]\n                }).then(function (alert) {\n                    alert.present();\n                });\n            });\n        };\n        AjfWarningAlertService.decorators = [\n            { type: i0.Injectable }\n        ];\n        /** @nocollapse */\n        AjfWarningAlertService.ctorParameters = function () { return [\n            { type: angular.AlertController }\n        ]; };\n        return AjfWarningAlertService;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfBooleanFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfBooleanFieldComponent, _super);\n        function AjfBooleanFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfBooleanFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ion-toggle *ngIf=\\\"control|async as ctrl\\\" [disabled]=\\\"readonly\\\" [formControl]=\\\"ctrl!\\\"></ion-toggle>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfBooleanFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfBooleanFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfDateFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfDateFieldComponent, _super);\n        function AjfDateFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfDateFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ion-item>\\n  <ajf-calendar\\n      *ngIf=\\\"control|async as ctrl\\\"\\n      selectionMode=\\\"day\\\"\\n      [dateOnlyForDay]=\\\"true\\\"\\n      [minDate]=\\\"instance.node.minDate|ajfDateValue\\\"\\n      [maxDate]=\\\"instance.node.maxDate|ajfDateValue\\\"\\n      [disabled]=\\\"readonly\\\"\\n      [formControl]=\\\"ctrl!\\\"></ajf-calendar>\\n</ion-item>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfDateFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfDateFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfDateInputFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfDateInputFieldComponent, _super);\n        function AjfDateInputFieldComponent(cdr, service, was, _dvs) {\n            var _this = _super.call(this, cdr, service, was) || this;\n            _this._dvs = _dvs;\n            return _this;\n        }\n        AjfDateInputFieldComponent.prototype.onChange = function (event) {\n            var evt = event;\n            if (this.input == null || evt.detail == null) {\n                return;\n            }\n            var val = evt.detail.value || '';\n            if (val.length > 0) {\n                if ((this._minDateStr != null && val < this._minDateStr)\n                    || (this._maxDateStr != null && val > this._maxDateStr)) {\n                    this.input.value = '';\n                }\n            }\n        };\n        AjfDateInputFieldComponent.prototype._onInstanceChange = function () {\n            this._minDateStr = this._dvs.transform(this.instance.node.minDate);\n            this._maxDateStr = this._dvs.transform(this.instance.node.maxDate);\n        };\n        AjfDateInputFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ion-input\\n    type=\\\"date\\\"\\n    *ngIf=\\\"control|async as ctrl\\\"\\n    [min]=\\\"instance.node.minDate|ajfDateValueString\\\"\\n    [max]=\\\"instance.node.maxDate|ajfDateValueString\\\"\\n    [readonly]=\\\"readonly\\\"\\n    (ionChange)=\\\"onChange($event)\\\"\\n    [formControl]=\\\"ctrl!\\\"></ion-input>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfDateInputFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService },\n            { type: forms.AjfDateValueStringPipe }\n        ]; };\n        AjfDateInputFieldComponent.propDecorators = {\n            input: [{ type: i0.ViewChild, args: [angular.IonInput, { static: false },] }]\n        };\n        return AjfDateInputFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfEmptyFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfEmptyFieldComponent, _super);\n        function AjfEmptyFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfEmptyFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<div [innerHTML]=\\\"instance.node.HTML\\\"></div>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfEmptyFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfEmptyFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfBarcodeFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfBarcodeFieldComponent, _super);\n        function AjfBarcodeFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfBarcodeFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ajf-barcode *ngIf=\\\"control|async as ctrl\\\" [formControl]=\\\"ctrl!\\\" [readonly]=\\\"readonly\\\"></ajf-barcode>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfBarcodeFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfBarcodeFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormulaFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfFormulaFieldComponent, _super);\n        function AjfFormulaFieldComponent(cdr, service, was) {\n            var _this = _super.call(this, cdr, service, was) || this;\n            _this._onChangeEvt = new i0.EventEmitter();\n            _this._onChangeSub = rxjs.Subscription.EMPTY;\n            var control$ = _this.control.pipe(operators.filter(function (control) { return control != null; }));\n            _this._onChangeSub = control$.pipe(operators.switchMap(function (control) { return _this._onChangeEvt.pipe(operators.map(function (value) { return ({ control: control, value: value }); })); })).subscribe(function (_a) {\n                var control = _a.control, value = _a.value;\n                try {\n                    var v = parseFloat(value);\n                    value = v;\n                }\n                catch (e) { }\n                control.setValue(value);\n            });\n            _this.value = _this.control.pipe(operators.filter(function (control) { return control != null; }), operators.switchMap(function (control) { return control.valueChanges.pipe(operators.startWith(control.value)); }));\n            return _this;\n        }\n        AjfFormulaFieldComponent.prototype.ngOnDestroy = function () {\n            this._onChangeEvt.complete();\n            this._onChangeSub.unsubscribe();\n        };\n        AjfFormulaFieldComponent.prototype.onChange = function (event) {\n            var evt = event;\n            if (evt.detail == null) {\n                return;\n            }\n            this._onChangeEvt.emit(evt.detail.value);\n        };\n        AjfFormulaFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ion-input type=\\\"text\\\" [readonly]=\\\"true\\\" [value]=\\\"value|async\\\" (ionChange)=\\\"onChange($event)\\\"></ion-input>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFormulaFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        AjfFormulaFieldComponent.propDecorators = {\n            input: [{ type: i0.ViewChild, args: [angular.IonInput, { static: true },] }]\n        };\n        return AjfFormulaFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfInputFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfInputFieldComponent, _super);\n        function AjfInputFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfInputFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ion-input *ngIf=\\\"control|async as ctrl\\\" [type]=\\\"type\\\" [formControl]=\\\"ctrl!\\\" [attr.disabled]=\\\"readonly\\\"></ion-input>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfInputFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfInputFieldComponent;\n    }(forms.AjfInputFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfMultipleChoiceFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfMultipleChoiceFieldComponent, _super);\n        function AjfMultipleChoiceFieldComponent(cdr, service, was, searchThreshold) {\n            return _super.call(this, cdr, service, was, searchThreshold) || this;\n        }\n        AjfMultipleChoiceFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ng-container *ngIf=\\\"!(instance|ajfExpandFieldWithChoices:searchThreshold); else expanded\\\">\\n  <div class=\\\"ajf-item-container\\\">\\n    <ng-container *ngIf=\\\"instance.filteredChoices as cs\\\">\\n      <gic-select\\n          #multipleChoiceSelect\\n          *ngIf=\\\"control|async as ctrl\\\"\\n          [multiple]=\\\"true\\\"\\n          [searchBar]=\\\"instance|ajfSelectHasSearchBar:searchThreshold\\\"\\n          [useVirtualScroll]=\\\"instance|ajfSelectUseVirtualScroll:100\\\"\\n          [placeholder]=\\\"instance.node.label\\\"\\n          [formControl]=\\\"ctrl!\\\"\\n          [disabled]=\\\"readonly\\\">\\n        <gic-select-option *ngFor=\\\"let item of cs\\\"\\n            [value]=\\\"item.value\\\">{{ item.label|translate }}</gic-select-option>\\n      </gic-select>\\n    </ng-container>\\n  </div>\\n</ng-container>\\n<ng-template #expanded>\\n  <div ajf-checkbox-group\\n      *ngIf=\\\"control|async as ctrl\\\"\\n      [formControl]=\\\"ctrl!\\\"\\n      class=\\\"ajf-choices-container\\\"\\n  >\\n    <ion-card  *ngFor=\\\"let choice of instance.filteredChoices\\\">\\n      <ajf-checkbox-group-item\\n        [readonly]=\\\"readonly\\\"\\n        [value]=\\\"choice.value\\\">\\n        {{ choice.label | translate }}\\n      </ajf-checkbox-group-item>\\n    </ion-card>\\n  </div>\\n</ng-template>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfMultipleChoiceFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService },\n            { type: Number, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [forms.AJF_SEARCH_ALERT_THRESHOLD,] }] }\n        ]; };\n        return AjfMultipleChoiceFieldComponent;\n    }(forms.AjfFieldWithChoicesComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfNumberFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfNumberFieldComponent, _super);\n        function AjfNumberFieldComponent(cdr, service, was) {\n            var _this = _super.call(this, cdr, service, was) || this;\n            _this._setValueEvt = new i0.EventEmitter();\n            _this._setValueSub = rxjs.Subscription.EMPTY;\n            _this.type = 'number';\n            _this.value = rxjs.defer(function () { return _this.control.pipe(operators.filter(function (control) { return control != null; }), operators.switchMap(function (control) { return control.valueChanges.pipe(operators.startWith(control.value)); })); });\n            return _this;\n        }\n        AjfNumberFieldComponent.prototype.ngOnDestroy = function () {\n            _super.prototype.ngOnDestroy.call(this);\n            this._setValueEvt.complete();\n            this._setValueSub.unsubscribe();\n        };\n        AjfNumberFieldComponent.prototype.ngOnInit = function () {\n            _super.prototype.ngOnInit.call(this);\n            this._setValueSub = this._setValueEvt.pipe(operators.withLatestFrom(this.control)).subscribe(function (_a) {\n                var _b = tslib.__read(_a, 2), value = _b[0], control = _b[1];\n                if (control == null) {\n                    return;\n                }\n                control.setValue(value);\n            });\n        };\n        AjfNumberFieldComponent.prototype.setValue = function (value) {\n            try {\n                value = parseFloat(\"\" + value);\n                if (isNaN(value)) {\n                    value = null;\n                }\n            }\n            catch (e) {\n                value = null;\n            }\n            this._setValueEvt.emit(value);\n        };\n        AjfNumberFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ion-input [ngModel]=\\\"value|async\\\" (ngModelChange)=\\\"setValue($event)\\\" [readonly]=\\\"readonly\\\"></ion-input>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfNumberFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfNumberFieldComponent;\n    }(forms.AjfInputFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfSingleChoiceFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfSingleChoiceFieldComponent, _super);\n        function AjfSingleChoiceFieldComponent(cdr, service, was, searchThreshold) {\n            return _super.call(this, cdr, service, was, searchThreshold) || this;\n        }\n        AjfSingleChoiceFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ng-container *ngIf=\\\"!(instance|ajfExpandFieldWithChoices:searchThreshold); else expanded\\\">\\n  <div class=\\\"ajf-item-container\\\">\\n    <ng-container *ngIf=\\\"instance.filteredChoices as cs\\\">\\n      <gic-select *ngIf=\\\"control|async as ctrl\\\"\\n          #singleChoiceSelect\\n          [disabled]=\\\"readonly\\\"\\n          [searchBar]=\\\"instance|ajfSelectHasSearchBar:searchThreshold\\\"\\n          [useVirtualScroll]=\\\"instance|ajfSelectUseVirtualScroll:100\\\"\\n          [placeholder]=\\\"instance.node.label\\\"\\n          [formControl]=\\\"ctrl!\\\">\\n        <gic-select-option *ngFor=\\\"let item of cs\\\" [value]=\\\"item.value\\\">{{ item.label|translate }}</gic-select-option>\\n      </gic-select>\\n    </ng-container>\\n  </div>\\n</ng-container>\\n<ng-template #expanded>\\n  <div class=\\\"ajf-choices-container\\\">\\n    <ion-radio-group\\n      *ngIf=\\\"control|async as ctrl\\\"\\n      [formControl]=\\\"ctrl!\\\">\\n      <ion-item *ngFor=\\\"let choice of instance.filteredChoices\\\">\\n        <ion-label>{{ choice.label | translate }}</ion-label>\\n        <ion-radio [disabled]=\\\"readonly\\\" [value]=\\\"choice.value\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </div>\\n</ng-template>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfSingleChoiceFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService },\n            { type: Number, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [forms.AJF_SEARCH_ALERT_THRESHOLD,] }] }\n        ]; };\n        return AjfSingleChoiceFieldComponent;\n    }(forms.AjfFieldWithChoicesComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTableFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfTableFieldComponent, _super);\n        function AjfTableFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfTableFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<div class=\\\"ajf-table-container\\\">\\n  <table>\\n    <ng-container *ngFor=\\\"let columns of (instance|ajfTableVisibleColumns); let i = index\\\">\\n      <tr [ngClass]=\\\"i | ajfTableRowClass\\\">\\n        <td *ngFor=\\\"let cellValue of columns\\\" >\\n          {{ cellValue | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\\n        </td>\\n      </tr>\\n    </ng-container>\\n  </table>\\n</div>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"table.ajf-table-field{width:100%}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfTableFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfTableFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTextareaFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfTextareaFieldComponent, _super);\n        function AjfTextareaFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfTextareaFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ion-textarea *ngIf=\\\"control|async as ctrl\\\" [formControl]=\\\"ctrl!\\\"></ion-textarea>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfTextareaFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfTextareaFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfTimeFieldComponent = /** @class */ (function (_super) {\n        tslib.__extends(AjfTimeFieldComponent, _super);\n        function AjfTimeFieldComponent(cdr, service, was) {\n            return _super.call(this, cdr, service, was) || this;\n        }\n        AjfTimeFieldComponent.decorators = [\n            { type: i0.Component, args: [{\n                        template: \"<ajf-time *ngIf=\\\"control|async as ctrl\\\" [formControl]=\\\"ctrl!\\\" [readonly]=\\\"readonly\\\"></ajf-time>\\n\",\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        encapsulation: i0.ViewEncapsulation.None,\n                        styles: [\"\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfTimeFieldComponent.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: forms.AjfFormRendererService },\n            { type: AjfWarningAlertService }\n        ]; };\n        return AjfTimeFieldComponent;\n    }(forms.AjfBaseFieldComponent));\n\n    var AjfFieldService = /** @class */ (function (_super) {\n        tslib.__extends(AjfFieldService, _super);\n        function AjfFieldService() {\n            var _this = _super.call(this) || this;\n            _this.componentsMap[forms.AjfFieldType.String] = { component: AjfInputFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Text] = { component: AjfTextareaFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Number] = { component: AjfNumberFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Boolean] = { component: AjfBooleanFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Formula] = { component: AjfFormulaFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Date] = { component: AjfDateFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.DateInput] = { component: AjfDateInputFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Table] = { component: AjfTableFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Empty] = { component: AjfEmptyFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.SingleChoice] = { component: AjfSingleChoiceFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.MultipleChoice] = { component: AjfMultipleChoiceFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Time] = { component: AjfTimeFieldComponent };\n            _this.componentsMap[forms.AjfFieldType.Barcode] = { component: AjfBarcodeFieldComponent };\n            return _this;\n        }\n        AjfFieldService.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] }\n        ];\n        /** @nocollapse */\n        AjfFieldService.ctorParameters = function () { return []; };\n        AjfFieldService.ɵprov = i0[\"ɵɵdefineInjectable\"]({ factory: function AjfFieldService_Factory() { return new AjfFieldService(); }, token: AjfFieldService, providedIn: \"root\" });\n        return AjfFieldService;\n    }(forms.AjfFieldService));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormField = /** @class */ (function (_super) {\n        tslib.__extends(AjfFormField, _super);\n        function AjfFormField(cdr, cfr, fieldService) {\n            var _this = _super.call(this, cdr, cfr) || this;\n            _this.componentsMap = fieldService.componentsMap;\n            return _this;\n        }\n        AjfFormField.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'ajf-field,ajf-form-field',\n                        template: \"<div\\n    [ngClass]=\\\"'ajf-field-' + (instance|ajfNodeCompleteName)\\\"\\n    [class.ajf-validated]=\\\"instance.validationResults|ajfFieldIsValid\\\"\\n>\\n  <ng-template ajf-field-host></ng-template>\\n</div>\\n<ng-container *ngIf=\\\"instance.node.attachments\\\">\\n  <ng-container *ngFor=\\\"let attachment of instance.node.attachments\\\">\\n    <a [href]=\\\"attachment.value\\\" target=\\\"_blank\\\">{{attachment.label}}</a>\\n  </ng-container>\\n</ng-container>\\n<ng-container *ngIf=\\\"instance.validationResults\\\">\\n  <div class=\\\"ajf-errors\\\">\\n    <ng-container *ngFor=\\\"let res of instance.validationResults\\\">\\n      <div class=\\\"error\\\" *ngIf=\\\"!res.result\\\">\\n        {{ res.error | translate }}\\n      </div>\\n    </ng-container>\\n  </div>\\n</ng-container>\\n\",\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-field ion-select{position:relative}ajf-field ion-input,ajf-field ion-textarea{border:dashed 2px #eee}ajf-field .ajf-choices-container{flex-direction:row;align-items:stretch;flex-wrap:wrap;display:flex}ajf-field .ajf-choices-container>ion-radio-group{display:flex;flex-wrap:wrap}ajf-field .ajf-choices-container>ion-radio-group ion-item{--ion-item-border-color: transparent}ajf-field .ajf-choices-container>ion-radio-group ion-item ion-label{margin-right:10px}ajf-field .ajf-choices-container>ion-card{margin-top:0;width:33%;display:flex;font-size:13px;flex-wrap:wrap;flex-basis:21% !important;flex-shrink:3 !important}ajf-field .ajf-choices-container>ion-card>ajf-checkbox-group-item{width:100%;display:flex;flex-direction:column;align-items:stretch;justify-content:center}ajf-field .ajf-choices-container>ion-card>ion-item{font-size:13px;flex:1 0 auto;flex-shrink:3 !important;flex-basis:21% !important;margin:0 10px}ajf-field .ajf-item-container{position:relative}ajf-field .ajf-errors{font-style:italic;padding:5px}ajf-field tr.ajf-row-odd{background-color:gray}ajf-field .ajf-table-container{overflow-x:auto}ajf-field .ajf-table-container table{width:100%}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFormField.ctorParameters = function () { return [\n            { type: i0.ChangeDetectorRef },\n            { type: i0.ComponentFactoryResolver },\n            { type: AjfFieldService }\n        ]; };\n        return AjfFormField;\n    }(forms.AjfFormField));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormRenderer = /** @class */ (function (_super) {\n        tslib.__extends(AjfFormRenderer, _super);\n        function AjfFormRenderer(rendererService, cdr) {\n            var _this = _super.call(this, rendererService, cdr) || this;\n            _this._longSlide = false;\n            _this._viewInitEvt = new i0.EventEmitter();\n            _this._scrollFinishSub = rxjs.Subscription.EMPTY;\n            _this._scrollFinishSub = _this._viewInitEvt.pipe(operators.delayWhen(function () { return _this.formGroup; }), operators.switchMap(function () { return _this.formSlider.pageScrollFinish; })).subscribe(function (_) { return _this._updateLongSlide(); });\n            return _this;\n        }\n        Object.defineProperty(AjfFormRenderer.prototype, \"longSlide\", {\n            get: function () { return this._longSlide; },\n            enumerable: true,\n            configurable: true\n        });\n        AjfFormRenderer.prototype.ngAfterViewInit = function () {\n            _super.prototype.ngAfterViewInit.call(this);\n            this._viewInitEvt.emit();\n        };\n        AjfFormRenderer.prototype.ngOnDestroy = function () {\n            _super.prototype.ngOnDestroy.call(this);\n            this._scrollFinishSub.unsubscribe();\n        };\n        AjfFormRenderer.prototype._updateLongSlide = function () {\n            var longSlide = this.formSlider.isCurrentPageLong();\n            if (longSlide !== this._longSlide) {\n                this._longSlide = longSlide;\n                this._changeDetectorRef.markForCheck();\n            }\n        };\n        AjfFormRenderer.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'ajf-form',\n                        template: \"<ng-container *ngIf=\\\"formGroup|async as currentFormGroup\\\">\\n  <form novalidate [formGroup]=\\\"currentFormGroup!\\\">\\n    <div class=\\\"ajf-form-container\\\">\\n      <ion-toolbar *ngIf=\\\"!hideTopToolbar\\\">\\n        {{ title | translate }}\\n        <ion-buttons slot=\\\"end\\\">\\n          <ion-button *ngIf=\\\"!saveDisabled\\\" (click)=\\\"onSave($event)\\\">{{ 'Save' | translate }}</ion-button>\\n        </ion-buttons>\\n      </ion-toolbar>\\n      <div class=\\\"ajf-slider-container\\\">\\n        <ajf-page-slider (orientationChange)=\\\"orientationChangeHandler($event)\\\"\\n            [hideNavigationButtons]=\\\"hideNavigationButtons\\\"\\n            [fixedOrientation]=\\\"fixedOrientation\\\"\\n            [orientation]=\\\"orientation\\\"\\n            #formSlider>\\n          <ng-container *ngIf=\\\"(slides|async) as curSlides\\\">\\n            <ng-container *ngIf=\\\"curSlides && curSlides!.length > 0 && hasStartMessage\\\">\\n              <ajf-page-slider-item>\\n                <div ajfFormPage class=\\\"ajf-form-page\\\">\\n                  <ion-card>\\n                    <ion-card-header>\\n                      <div class=\\\"ajf-page-slider-item-header\\\">\\n                        <h2>\\n                          <span class=\\\"ajf-form-header-number\\\">\\n                            1  &rarr;\\n                          </span>\\n                          <span class=\\\"ajf-title\\\">\\n                            <ng-content select=\\\"[ajfFormStartMessageTitle]\\\"></ng-content>\\n                          </span>\\n                        </h2>\\n                      </div>\\n                    </ion-card-header>\\n                    <ion-card-content>\\n                      <ng-content select=\\\"[ajfFormStartMessage]\\\"></ng-content>\\n                    </ion-card-content>\\n                  </ion-card>\\n                </div>\\n              </ajf-page-slider-item>\\n            </ng-container>\\n            <ng-container *ngFor=\\\"let slideInstance of curSlides; trackBy: trackNodeById\\\">\\n              <ng-container *ngIf=\\\"(!(slideInstance|ajfIsRepeatingSlideInstance)) && slideInstance.visible\\\">\\n                <ajf-page-slider-item>\\n                  <div ajfFormPage class=\\\"ajf-form-page\\\">\\n                    <ion-card>\\n                      <ion-card-header>\\n                        <div class=\\\"ajf-page-slider-item-header\\\">\\n                          <h2>\\n                            <span class=\\\"ajf-form-header-number\\\">{{ slideInstance.position + (hasStartMessage | ajfBoolToInt) }} &rarr;</span>\\n                            <span class=\\\"ajf-title\\\">{{ slideInstance.node.label | translate}}</span>\\n                          </h2>\\n                          <ion-icon color=\\\"danger\\\" name=\\\"warning\\\" *ngIf=\\\"!slideInstance.valid\\\"></ion-icon>\\n                          <ion-icon color=\\\"secondary\\\" name=\\\"checkmark\\\" *ngIf=\\\"slideInstance.valid\\\"></ion-icon>\\n                        </div>\\n                      </ion-card-header>\\n                      <ion-card-content>\\n                        <ng-container *ngFor=\\\"let fieldInstance of slideInstance.flatNodes; trackBy: trackNodeById\\\">\\n                          <div [ngClass]=\\\"'ajf-' + (fieldInstance|ajfAsFieldInstance).node.size\\\" class=\\\"ajf-field-entry\\\"\\n                              *ngIf=\\\"fieldInstance.visible\\\">\\n                            <i [class]=\\\"(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon\\\" item-right></i>\\n                            <p>{{ (fieldInstance|ajfAsFieldInstance).node.description }}</p>\\n                            <ion-label [innerHTML]=\\\"fieldInstance.node.label | translate\\\"></ion-label>\\n                            <ajf-field [instance]=\\\"fieldInstance|ajfAsFieldInstance\\\" [readonly]=\\\"readonly\\\"></ajf-field>\\n                          </div>\\n                        </ng-container>\\n                      </ion-card-content>\\n                    </ion-card>\\n                  </div>\\n                </ajf-page-slider-item>\\n              </ng-container>\\n              <ng-container *ngIf=\\\"(slideInstance|ajfIsRepeatingSlideInstance) && slideInstance.visible\\\">\\n                <ajf-page-slider-item *ngFor=\\\"let curRep of ((slideInstance|ajfAsRepeatingSlideInstance).reps|ajfRange); let idx = index; let lastSlide = last\\\">\\n                  <div ajfFormPage class=\\\"ajf-form-page\\\">\\n                    <ion-card>\\n                      <ion-card-header>\\n                        <div class=\\\"ajf-page-slider-item-header\\\">\\n                          <h2>\\n                            <span class=\\\"ajf-form-header-number\\\">{{ slideInstance.position|ajfIncrement:idx }} &rarr;</span>\\n                            <span class=\\\"ajf-title\\\">{{ slideInstance.node.label | translate }}</span>\\n                          </h2>\\n                          <ion-icon color=\\\"danger\\\" name=\\\"ajf-warning\\\" *ngIf=\\\"!(slideInstance|ajfValidSlide:idx)\\\"></ion-icon>\\n                          <ion-icon color=\\\"secondary\\\" name=\\\"checkmark\\\" *ngIf=\\\"(slideInstance|ajfValidSlide:idx)\\\"></ion-icon>\\n                        </div>\\n                        <div *ngIf=\\\"lastSlide\\\" class=\\\"ajf-group-actions\\\">\\n                          <ion-fab-button size=\\\"small\\\" (click)=\\\"addGroup(slideInstance)\\\" [disabled]=\\\"!(slideInstance|ajfAsRepeatingSlideInstance).canAdd\\\">\\n                            <ion-icon name=\\\"add\\\"></ion-icon>\\n                          </ion-fab-button>\\n                          <ion-fab-button size=\\\"small\\\" (click)=\\\"removeGroup(slideInstance)\\\" [disabled]=\\\"!(slideInstance|ajfAsRepeatingSlideInstance).canRemove\\\">\\n                            <ion-icon name=\\\"remove\\\"></ion-icon>\\n                          </ion-fab-button>\\n                        </div>\\n                      </ion-card-header>\\n                      <ion-card-content>\\n                        <ng-container *ngFor=\\\"let fieldInstance of slideInstance.slideNodes[idx]; trackBy: trackNodeById\\\">\\n                          <div [ngClass]=\\\"'ajf-' + (fieldInstance|ajfAsFieldInstance).node.size\\\" class=\\\"ajf-field-entry\\\"\\n                              *ngIf=\\\"fieldInstance.visible\\\">\\n                            <i [class]=\\\"(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon\\\" item-right></i>\\n                            <p>{{ (fieldInstance|ajfAsFieldInstance).node.description }}</p>\\n                            <ion-label [innerHTML]=\\\"fieldInstance.node.label | translate\\\"></ion-label>\\n                            <ajf-field [instance]=\\\"fieldInstance|ajfAsFieldInstance\\\" [readonly]=\\\"readonly\\\"></ajf-field>\\n                          </div>\\n                        </ng-container>\\n                        <div *ngIf=\\\"lastSlide && longSlide\\\" class=\\\"ajf-group-actions ajf-group-actions-bottom\\\">\\n                          <ion-fab-button size=\\\"small\\\" (click)=\\\"addGroup(slideInstance)\\\" [disabled]=\\\"!(slideInstance|ajfAsRepeatingSlideInstance).canAdd\\\" mat-mini-fab>\\n                            <ion-icon name=\\\"add\\\"></ion-icon>\\n                          </ion-fab-button>\\n                          <ion-fab-button size=\\\"small\\\" (click)=\\\"removeGroup(slideInstance)\\\" [disabled]=\\\"!(slideInstance|ajfAsRepeatingSlideInstance).canRemove\\\" mat-mini-fab>\\n                            <ion-icon name=\\\"remove\\\"></ion-icon>\\n                          </ion-fab-button>\\n                        </div>\\n                      </ion-card-content>\\n                    </ion-card>\\n                  </div>\\n                </ajf-page-slider-item>\\n              </ng-container>\\n            </ng-container>\\n            <ng-container *ngIf=\\\"curSlides && curSlides!.length > 0 && hasEndMessage\\\">\\n              <ajf-page-slider-item>\\n                <div ajfFormPage class=\\\"ajf-form-page\\\">\\n                  <ion-card>\\n                    <ion-card-header>\\n                      <div class=\\\"ajf-page-slider-item-header\\\">\\n                        <h2>\\n                          <span *ngIf=\\\"(slidesNum|async) as snum\\\" class=\\\"ajf-form-header-number\\\">\\n                            {{ snum! + (hasStartMessage | ajfBoolToInt) + 1 }} &rarr;\\n                          </span>\\n                          <span class=\\\"ajf-title\\\">\\n                            <ng-content select=\\\"[ajfFormEndMessageTitle]\\\"></ng-content>\\n                          </span>\\n                        </h2>\\n                      </div>\\n                    </ion-card-header>\\n                    <ion-card-content>\\n                      <ng-content select=\\\"[ajfFormEndMessage]\\\"></ng-content>\\n                    </ion-card-content>\\n                  </ion-card>\\n                </div>\\n              </ajf-page-slider-item>\\n            </ng-container>\\n          </ng-container>\\n          <div ajfPageSliderBar *ngIf=\\\"!hideBottomToolbar\\\">\\n            <div class=\\\"ajf-left-bar\\\">\\n              <ion-buttons class=\\\"ajf-errors\\\" *ngIf=\\\"((errors | async) || 0) > 0\\\">\\n                <ion-button (click)=\\\"goToPrevError()\\\" color=\\\"danger\\\">\\n                  <ion-icon name=\\\"arrow-up\\\"></ion-icon>\\n                </ion-button>\\n                <ion-button (click)=\\\"goToNextError()\\\" color=\\\"danger\\\">\\n                  <ion-icon name=\\\"arrow-down\\\"></ion-icon>\\n                </ion-button>\\n              </ion-buttons>\\n              <div class=\\\"ajf-info-box ajf-error\\\">\\n                <div class=\\\"ajf-title\\\" translate>\\n                  Errors\\n                </div>\\n                <div class=\\\"ajf-content\\\">\\n                  {{ errors | async }} / {{ slidesNum|async }}\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </ajf-page-slider>\\n      </div>\\n    </div>\\n  </form>\\n</ng-container>\\n\",\n                        encapsulation: i0.ViewEncapsulation.None,\n                        changeDetection: i0.ChangeDetectionStrategy.OnPush,\n                        styles: [\"ajf-form{display:block;position:relative}ajf-form form{display:block;position:absolute;top:0;right:0;bottom:0;left:0}ajf-form form .ajf-form-container{display:flex;flex-direction:column;height:100%}ajf-form form .ajf-form-container ion-toolbar{flex:0 0 auto;height:56px}ajf-form form .ajf-form-container ion-toolbar.ajf-hidden{opacity:0}ajf-form form .ajf-form-container>.ajf-slider-container{flex:1 1 auto;position:relative;height:calc(100% - 56px)}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider{height:100%}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content{padding:16px}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page{flex:1;max-height:100%}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card{flex:1;margin-bottom:2em}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-header{overflow:visible !important}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-header .ajf-group-actions{position:absolute;left:calc(100vw - 160px - 6em);width:160px;margin-top:-2em;padding:15px;z-index:10;white-space:nowrap;overflow:visible !important}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-header .ajf-group-actions ion-fab-button{display:inline-block;overflow:visible !important}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content{display:flex;flex-wrap:wrap;flex-direction:row;align-content:flex-start;position:relative}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content .ajf-group-actions-bottom{width:100%;text-align:right;overflow:visible !important}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content .ajf-group-actions-bottom ion-fab-button{overflow:visible !important;display:inline-block}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content>.ajf-field-entry{flex:1 0 auto;padding-left:10px;padding-right:10px;width:100%;box-sizing:border-box}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content>.ajf-field-entry.ajf-normal{width:100%}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content>.ajf-field-entry.ajf-small{width:50%}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content>.ajf-field-entry.ajf-smaller{width:33%}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content>.ajf-field-entry.ajf-tiny{width:25%}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider ajf-page-slider-item .ajf-page-slider-item-content .ajf-form-page>ion-card>ion-card-content>.ajf-field-entry.ajf-mini{width:20%}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header{display:flex;align-items:center;width:100%}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2{flex:1}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2>.ajf-form-header-number{margin-right:.5em}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider .ajf-page-slider-item-header>h2>.ajf-title{display:inline-block;margin-right:40px;white-space:normal;vertical-align:top}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar{display:flex;align-items:flex-start;flex-direction:row;position:absolute;bottom:0}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar ion-buttons.ajf-errors{order:1;color:red}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box{height:40px;padding:4px}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div{height:16px;line-height:16px}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box>div.ajf-content{font-weight:bold}ajf-form form .ajf-form-container>.ajf-slider-container>ajf-page-slider [ajfPageSliderBar] .ajf-left-bar .ajf-info-box.ajf-error{order:2;color:red}ajf-form form .ajf-form-container .ajf-spacer{flex:1 0 auto}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        AjfFormRenderer.ctorParameters = function () { return [\n            { type: forms.AjfFormRendererService },\n            { type: i0.ChangeDetectorRef }\n        ]; };\n        return AjfFormRenderer;\n    }(forms.AjfFormRenderer));\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormPage = /** @class */ (function () {\n        function AjfFormPage() {\n        }\n        AjfFormPage.decorators = [\n            { type: i0.Directive, args: [{ selector: '[ajfFormPage]' },] }\n        ];\n        return AjfFormPage;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfSelectHasSearchBarPipe = /** @class */ (function () {\n        function AjfSelectHasSearchBarPipe() {\n        }\n        AjfSelectHasSearchBarPipe.prototype.transform = function (instance, searchThreshold) {\n            return instance.filteredChoices && instance.filteredChoices.length > searchThreshold;\n        };\n        AjfSelectHasSearchBarPipe.decorators = [\n            { type: i0.Pipe, args: [{ name: 'ajfSelectHasSearchBar' },] }\n        ];\n        return AjfSelectHasSearchBarPipe;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfSelectUseVirtualScroll = /** @class */ (function () {\n        function AjfSelectUseVirtualScroll() {\n        }\n        AjfSelectUseVirtualScroll.prototype.transform = function (instance, vsThreshold) {\n            return instance.filteredChoices && instance.filteredChoices.length > vsThreshold;\n        };\n        AjfSelectUseVirtualScroll.decorators = [\n            { type: i0.Pipe, args: [{ name: 'ajfSelectUseVirtualScroll' },] }\n        ];\n        return AjfSelectUseVirtualScroll;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n    var AjfFormsModule = /** @class */ (function () {\n        function AjfFormsModule() {\n        }\n        AjfFormsModule.forRoot = function () {\n            return {\n                ngModule: AjfFormsModule,\n                providers: [\n                    AjfFieldService,\n                ],\n            };\n        };\n        AjfFormsModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            forms$1.FormsModule,\n                            forms$1.ReactiveFormsModule,\n                            angular.IonicModule,\n                            angular$1.GicModule,\n                            core.TranslateModule,\n                            common$1.AjfCommonModule,\n                            forms.AjfFormsModule,\n                            calendar.AjfCalendarModule,\n                            barcode.AjfBarcodeModule,\n                            checkboxGroup.AjfCheckboxGroupModule,\n                            pageSlider.AjfPageSliderModule,\n                            time.AjfTimeModule,\n                        ],\n                        declarations: [\n                            AjfBarcodeFieldComponent,\n                            AjfBooleanFieldComponent,\n                            AjfDateFieldComponent,\n                            AjfDateInputFieldComponent,\n                            AjfEmptyFieldComponent,\n                            AjfFormField,\n                            AjfFormPage,\n                            AjfFormRenderer,\n                            AjfFormulaFieldComponent,\n                            AjfInputFieldComponent,\n                            AjfMultipleChoiceFieldComponent,\n                            AjfNumberFieldComponent,\n                            AjfSelectHasSearchBarPipe,\n                            AjfSelectUseVirtualScroll,\n                            AjfSingleChoiceFieldComponent,\n                            AjfTableFieldComponent,\n                            AjfTextareaFieldComponent,\n                            AjfTimeFieldComponent\n                        ],\n                        entryComponents: [\n                            AjfBarcodeFieldComponent,\n                            AjfBooleanFieldComponent,\n                            AjfDateFieldComponent,\n                            AjfDateInputFieldComponent,\n                            AjfEmptyFieldComponent,\n                            AjfFormulaFieldComponent,\n                            AjfInputFieldComponent,\n                            AjfMultipleChoiceFieldComponent,\n                            AjfNumberFieldComponent,\n                            AjfSingleChoiceFieldComponent,\n                            AjfTableFieldComponent,\n                            AjfTextareaFieldComponent,\n                            AjfTimeFieldComponent\n                        ],\n                        exports: [\n                            AjfFormField,\n                            AjfFormRenderer\n                        ],\n                        providers: [\n                            AjfFieldService,\n                            AjfWarningAlertService,\n                        ],\n                    },] }\n        ];\n        return AjfFormsModule;\n    }());\n\n    /**\n     * @license\n     * Copyright (C) 2018 Gnucoop soc. coop.\n     *\n     * This file is part of the Advanced JSON forms (ajf).\n     *\n     * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n     * modify it under the terms of the GNU Affero General Public License as\n     * published by the Free Software Foundation, either version 3 of the License,\n     * or (at your option) any later version.\n     *\n     * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n     * but WITHOUT ANY WARRANTY; without even the implied warranty of\n     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n     * General Public License for more details.\n     *\n     * You should have received a copy of the GNU Affero General Public License\n     * along with Advanced JSON forms (ajf).\n     * If not, see http://www.gnu.org/licenses/.\n     *\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AjfBooleanFieldComponent = AjfBooleanFieldComponent;\n    exports.AjfDateFieldComponent = AjfDateFieldComponent;\n    exports.AjfDateInputFieldComponent = AjfDateInputFieldComponent;\n    exports.AjfEmptyFieldComponent = AjfEmptyFieldComponent;\n    exports.AjfFieldService = AjfFieldService;\n    exports.AjfFormField = AjfFormField;\n    exports.AjfFormRenderer = AjfFormRenderer;\n    exports.AjfFormsModule = AjfFormsModule;\n    exports.AjfInputFieldComponent = AjfInputFieldComponent;\n    exports.AjfMultipleChoiceFieldComponent = AjfMultipleChoiceFieldComponent;\n    exports.AjfNumberFieldComponent = AjfNumberFieldComponent;\n    exports.AjfSingleChoiceFieldComponent = AjfSingleChoiceFieldComponent;\n    exports.AjfTableFieldComponent = AjfTableFieldComponent;\n    exports.AjfTextareaFieldComponent = AjfTextareaFieldComponent;\n    exports.AjfTimeFieldComponent = AjfTimeFieldComponent;\n    exports.AjfWarningAlertService = AjfWarningAlertService;\n    exports.ɵajf_src_ionic_forms_forms_a = AjfBarcodeFieldComponent;\n    exports.ɵajf_src_ionic_forms_forms_b = AjfFormPage;\n    exports.ɵajf_src_ionic_forms_forms_c = AjfFormulaFieldComponent;\n    exports.ɵajf_src_ionic_forms_forms_d = AjfSelectHasSearchBarPipe;\n    exports.ɵajf_src_ionic_forms_forms_e = AjfSelectUseVirtualScroll;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ionic-forms.umd.js.map\n"]}