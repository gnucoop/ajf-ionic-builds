{"version":3,"file":"forms.mjs","sources":["../../../../../../src/ionic/forms/warning-alert-service.ts","../../../../../../src/ionic/forms/boolean-field.ts","../../../../../../src/ionic/forms/boolean-field.html","../../../../../../src/ionic/forms/date-field.ts","../../../../../../src/ionic/forms/date-field.html","../../../../../../src/ionic/forms/date-input-field.ts","../../../../../../src/ionic/forms/date-input-field.html","../../../../../../src/ionic/forms/empty-field.ts","../../../../../../src/ionic/forms/empty-field.html","../../../../../../src/ionic/forms/barcode-field.ts","../../../../../../src/ionic/forms/barcode-field.html","../../../../../../src/ionic/forms/formula-field.ts","../../../../../../src/ionic/forms/formula-field.html","../../../../../../src/ionic/forms/input-field.ts","../../../../../../src/ionic/forms/input-field.html","../../../../../../src/ionic/forms/select-has-search-bar.pipe.ts","../../../../../../src/ionic/forms/select-use-virtual-scroll.pipe.ts","../../../../../../src/ionic/forms/multiple-choice-field.ts","../../../../../../src/ionic/forms/multiple-choice-field.html","../../../../../../src/ionic/forms/number-field.ts","../../../../../../src/ionic/forms/number-field.html","../../../../../../src/ionic/forms/range-field.ts","../../../../../../src/ionic/forms/range-field.html","../../../../../../src/ionic/forms/single-choice-field.ts","../../../../../../src/ionic/forms/single-choice-field.html","../../../../../../src/ionic/forms/table-field.ts","../../../../../../src/ionic/forms/table-field.html","../../../../../../src/ionic/forms/textarea-field.ts","../../../../../../src/ionic/forms/textarea-field.html","../../../../../../src/ionic/forms/time-field.ts","../../../../../../src/ionic/forms/time-field.html","../../../../../../src/ionic/forms/video-url-field.ts","../../../../../../src/ionic/forms/video-url-field.html","../../../../../../src/ionic/forms/field-service.ts","../../../../../../src/ionic/forms/field.ts","../../../../../../src/ionic/forms/field.html","../../../../../../src/ionic/forms/popover.ts","../../../../../../src/ionic/forms/form-page.ts","../../../../../../src/ionic/forms/form.ts","../../../../../../src/ionic/forms/form.html","../../../../../../src/ionic/forms/forms-module.ts","../../../../../../src/ionic/forms/public-api.ts","../../../../../../src/ionic/forms/index.ts","../../../../../../src/ionic/forms/forms_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfFieldWarningAlertResult,\n  AjfWarningAlertService as CoreWarningAlertService,\n} from '@ajf/core/forms';\nimport {Injectable} from '@angular/core';\nimport {AlertController} from '@ionic/angular';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class AjfWarningAlertService implements CoreWarningAlertService {\n  constructor(private _alertCtrl: AlertController) {}\n\n  showWarningAlertPrompt(warnings: string[]): Observable<AjfFieldWarningAlertResult> {\n    return new Observable<AjfFieldWarningAlertResult>(subscriber => {\n      this._alertCtrl\n        .create({\n          header: 'Warning',\n          message: warnings.join('\\n'),\n          buttons: [\n            {\n              text: 'No',\n              handler: () => {\n                subscriber.next(<AjfFieldWarningAlertResult>{result: false});\n                subscriber.complete();\n              },\n            },\n            {\n              text: 'Yes',\n              handler: () => {\n                subscriber.next(<AjfFieldWarningAlertResult>{result: true});\n                subscriber.complete();\n              },\n            },\n          ],\n        })\n        .then(alert => {\n          alert.present();\n        });\n    });\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'boolean-field.html',\n  styleUrls: ['boolean-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfBooleanFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ion-toggle *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></ion-toggle>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfDateFieldInstance,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n@Component({\n  templateUrl: 'date-field.html',\n  styleUrls: ['date-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfDateFieldComponent extends AjfBaseFieldComponent<AjfDateFieldInstance> {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ion-item>\n  <ajf-calendar\n      *ngIf=\"control|async as ctrl\"\n      selectionMode=\"day\"\n      [dateOnlyForDay]=\"true\"\n      [minDate]=\"instance.node.minDate|ajfDateValue\"\n      [maxDate]=\"instance.node.maxDate|ajfDateValue\"\n      [formControl]=\"ctrl!\"></ajf-calendar>\n</ion-item>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfDateFieldInstance,\n  AjfDateValueStringPipe,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {IonInput} from '@ionic/angular';\nimport {InputChangeEventDetail} from '@ionic/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'date-input-field.html',\n  styleUrls: ['date-input-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfDateInputFieldComponent extends AjfBaseFieldComponent<AjfDateFieldInstance> {\n  @ViewChild(IonInput, {static: false}) input: IonInput;\n\n  private _minDateStr: string | undefined;\n  private _maxDateStr: string | undefined;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    private _dvs: AjfDateValueStringPipe,\n  ) {\n    super(cdr, service, was);\n  }\n\n  onChange(event: Event): void {\n    const evt = event as CustomEvent<InputChangeEventDetail>;\n    if (this.input == null || evt.detail == null) {\n      return;\n    }\n    const val = evt.detail.value || '';\n    if (val.length > 0) {\n      if (\n        (this._minDateStr != null && val < this._minDateStr) ||\n        (this._maxDateStr != null && val > this._maxDateStr)\n      ) {\n        this.input.value = '';\n      }\n    }\n  }\n\n  protected override _onInstanceChange(): void {\n    this._minDateStr = this._dvs.transform(this.instance.node.minDate);\n    this._maxDateStr = this._dvs.transform(this.instance.node.maxDate);\n  }\n}\n","<ion-input\n    type=\"date\"\n    *ngIf=\"control|async as ctrl\"\n    [attr.aria-label]=\"instance|ajfNodeCompleteName\"\n    [min]=\"instance.node.minDate|ajfDateValueString\"\n    [max]=\"instance.node.maxDate|ajfDateValueString\"\n    (ionChange)=\"onChange($event)\"\n    [formControl]=\"ctrl!\"></ion-input>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfEmptyFieldInstance,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'empty-field.html',\n  styleUrls: ['empty-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfEmptyFieldComponent extends AjfBaseFieldComponent<AjfEmptyFieldInstance> {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<div [innerHTML]=\"instance.node.HTML\"></div>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'barcode-field.html',\n  styleUrls: ['barcode-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfBarcodeFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ajf-barcode *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></ajf-barcode>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfFormRendererService,\n  AjfFormulaFieldInstance,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {IonInput} from '@ionic/angular';\nimport {InputChangeEventDetail} from '@ionic/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {filter, map, startWith, switchMap} from 'rxjs/operators';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'formula-field.html',\n  styleUrls: ['formula-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfFormulaFieldComponent\n  extends AjfBaseFieldComponent<AjfFormulaFieldInstance>\n  implements OnDestroy\n{\n  @ViewChild(IonInput, {static: true}) input: IonInput;\n\n  readonly value: Observable<any>;\n\n  private _onChangeEvt = new EventEmitter<any>();\n  private _onChangeSub = Subscription.EMPTY;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n\n    const control$ = this.control.pipe(\n      filter(control => control != null),\n    ) as Observable<FormControl>;\n    const controlValue$ = control$.pipe(\n      switchMap(control => this._onChangeEvt.pipe(map(value => ({control, value})))),\n    ) as Observable<{control: FormControl; value: any}>;\n\n    this._onChangeSub = controlValue$.subscribe(({control, value}) => {\n      try {\n        const v = parseFloat(value);\n        value = v;\n      } catch (e) {}\n      control.setValue(value);\n    });\n\n    this.value = this.control.pipe(\n      filter(control => control != null),\n      switchMap(control => control!.valueChanges.pipe(startWith(control!.value))),\n    );\n  }\n\n  override ngOnDestroy(): void {\n    this._onChangeEvt.complete();\n    this._onChangeSub.unsubscribe();\n  }\n\n  onChange(event: Event): void {\n    const evt = event as CustomEvent<InputChangeEventDetail>;\n    if (evt.detail == null) {\n      return;\n    }\n    this._onChangeEvt.emit(evt.detail.value);\n  }\n}\n","<ion-input type=\"text\" [readonly]=\"true\" [value]=\"value|async\" (ionChange)=\"onChange($event)\"></ion-input>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n  AjfInputFieldComponent as CoreComponent,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'input-field.html',\n  styleUrls: ['input-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfInputFieldComponent extends CoreComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ion-input *ngIf=\"control|async as ctrl\" [type]=\"type\" [formControl]=\"ctrl!\" [readonly]=\"instance|ajfIsReadonlyInputField\">\n</ion-input>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldWithChoicesInstance} from '@ajf/core/forms';\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfSelectHasSearchBar'})\nexport class AjfSelectHasSearchBarPipe implements PipeTransform {\n  transform(instance: AjfFieldWithChoicesInstance<any>, searchThreshold: number): boolean {\n    return instance.filteredChoices && instance.filteredChoices.length > searchThreshold;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldWithChoicesInstance} from '@ajf/core/forms';\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'ajfSelectUseVirtualScroll'})\nexport class AjfSelectUseVirtualScroll implements PipeTransform {\n  transform(instance: AjfFieldWithChoicesInstance<any>, vsThreshold: number): boolean {\n    return instance.filteredChoices && instance.filteredChoices.length > vsThreshold;\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_SEARCH_ALERT_THRESHOLD,\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFieldWithChoicesComponent,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'multiple-choice-field.html',\n  styleUrls: ['multiple-choice-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfMultipleChoiceFieldComponent<T> extends AjfFieldWithChoicesComponent<T> {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    @Optional() @Inject(AJF_SEARCH_ALERT_THRESHOLD) searchThreshold: number,\n  ) {\n    super(cdr, service, was, searchThreshold);\n  }\n}\n","<ng-container *ngIf=\"!(instance|ajfExpandFieldWithChoices:searchThreshold); else expanded\">\n  <div class=\"ajf-item-container\">\n    <ng-container *ngIf=\"instance.filteredChoices as cs\">\n      <gic-select\n          #multipleChoiceSelect\n          *ngIf=\"control|async as ctrl\"\n          [multiple]=\"true\"\n          [searchBar]=\"instance|ajfSelectHasSearchBar:searchThreshold\"\n          [useVirtualScroll]=\"instance|ajfSelectUseVirtualScroll:100\"\n          [placeholder]=\"instance.node.label\"\n          [formControl]=\"ctrl!\">\n        <gic-select-option *ngFor=\"let item of cs\"\n            [value]=\"item.value\">{{ item.label|transloco }}</gic-select-option>\n      </gic-select>\n    </ng-container>\n  </div>\n</ng-container>\n<ng-template #expanded>\n  <div ajf-checkbox-group\n      *ngIf=\"control|async as ctrl\"\n      [formControl]=\"ctrl!\"\n      class=\"ajf-choices-container\"\n  >\n    <ion-card *ngFor=\"let choice of instance.filteredChoices\">\n      <ajf-checkbox-group-item\n        [value]=\"choice.value\">\n        {{ choice.label | transloco }}\n      </ajf-checkbox-group-item>\n    </ion-card>\n  </div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n  AjfInputFieldComponent as CoreComponent,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {defer, Observable, Subscription} from 'rxjs';\nimport {filter, startWith, switchMap, withLatestFrom} from 'rxjs/operators';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'number-field.html',\n  styleUrls: ['number-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfNumberFieldComponent extends CoreComponent implements OnDestroy, OnInit {\n  readonly value: Observable<number | null>;\n\n  private _setValueEvt: EventEmitter<number | null> = new EventEmitter<number | null>();\n  private _setValueSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n    this.type = 'number';\n\n    this.value = defer(() =>\n      this.control.pipe(\n        filter(control => control != null),\n        switchMap(control => control!.valueChanges.pipe(startWith(control!.value))),\n      ),\n    ) as Observable<number | null>;\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._setValueEvt.complete();\n    this._setValueSub.unsubscribe();\n  }\n\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this._setValueSub = this._setValueEvt\n      .pipe(withLatestFrom(this.control))\n      .subscribe(([value, ctrl]) => {\n        if (ctrl == null) {\n          return;\n        }\n        const control = ctrl as FormControl;\n        control.setValue(value);\n      });\n  }\n\n  setValue(value: any): void {\n    try {\n      value = parseFloat(`${value}`);\n      if (isNaN(value)) {\n        value = null;\n      }\n    } catch (e) {\n      value = null;\n    }\n    this._setValueEvt.emit(value);\n  }\n}\n","<ion-input aria-label=\"\" [ngModel]=\"value|async\" (ngModelChange)=\"setValue($event)\"></ion-input>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AJF_WARNING_ALERT_SERVICE, AjfFormRendererService} from '@ajf/core/forms';\nimport {AjfRange} from '@ajf/core/range';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  selector: 'ajf-range',\n  templateUrl: 'range-field.html',\n  styleUrls: ['range-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfRangeFieldComponent extends AjfRange {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ion-range\n  snaps=\"true\"\n  ticks=\"true\"\n  debounce=\"500\"\n  *ngIf=\"control|async as ctrl\"\n  [attr.aria-label]=\"name\"\n  [formControl]=\"ctrl!\"\n  [name]=\"name\"\n  [step]=\"step\"\n  [min]=\"start\"\n  [max]=\"end\"\n></ion-range>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_SEARCH_ALERT_THRESHOLD,\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFieldWithChoicesComponent,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Optional,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'single-choice-field.html',\n  styleUrls: ['single-choice-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfSingleChoiceFieldComponent<T> extends AjfFieldWithChoicesComponent<T> {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    @Optional() @Inject(AJF_SEARCH_ALERT_THRESHOLD) searchThreshold: number,\n  ) {\n    super(cdr, service, was, searchThreshold);\n  }\n}\n","<ng-container *ngIf=\"!(instance|ajfExpandFieldWithChoices:searchThreshold); else expanded\">\n  <div class=\"ajf-item-container\">\n    <ng-container *ngIf=\"instance.filteredChoices as cs\">\n      <gic-select *ngIf=\"control|async as ctrl\"\n          #singleChoiceSelect\n          [searchBar]=\"instance|ajfSelectHasSearchBar:searchThreshold\"\n          [useVirtualScroll]=\"instance|ajfSelectUseVirtualScroll:100\"\n          [placeholder]=\"instance.node.label\"\n          [formControl]=\"ctrl!\">\n        <gic-select-option *ngFor=\"let item of cs\" [value]=\"item.value\">{{ item.label|transloco }}</gic-select-option>\n      </gic-select>\n    </ng-container>\n  </div>\n</ng-container>\n<ng-template #expanded>\n  <div class=\"ajf-choices-container\">\n    <ion-radio-group\n      *ngIf=\"control|async as ctrl\"\n      [formControl]=\"ctrl!\">\n      <ion-item *ngFor=\"let choice of instance.filteredChoices\">\n        <ion-label>{{ choice.label | transloco }}</ion-label>\n        <ion-radio [value]=\"choice.value\"></ion-radio>\n      </ion-item>\n    </ion-radio-group>\n  </div>\n</ng-template>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n  AjfTableFieldComponent as AjfCoreTableFieldComponent,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'table-field.html',\n  styleUrls: ['table-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfTableFieldComponent extends AjfCoreTableFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<table class=\"ajf-table-field\">\n  <ng-container *ngIf=\"instance.node as node\">\n    <ng-container *ngFor=\"let columns of instance.controls; let row = index\">\n      <tr [ngClass]=\"row | ajfTableRowClass\">\n        <td>\n          <ng-container *ngIf=\"columns.length > 0 && columns[0] != null\">\n            {{ columns[0] | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\n          </ng-container>\n        </td>\n        <ng-container *ngIf=\"columns.length > 1\">\n          <td *ngFor=\"let c of columns[1]; let column = index\">\n            <ng-container *ngIf=\"row == 0; else controlCell\">\n              {{ c | ajfTranslateIfString | ajfFormatIfNumber: '.0-2' }}\n            </ng-container>\n            <ng-template #controlCell>\n              <ng-container *ngIf=\"c|ajfGetTableCellControl as contr\">\n                <ng-container *ngIf=\"contr != null\">\n                  <ng-container\n                    *ngIf=\"contr.show && (node.rows[row-1][column]|ajfIsCellEditable); else plainTextCell\"\n                  >\n                    <ng-container\n                      *ngIf=\"contr.type === 'number';else genericInput\"\n                    >\n                      <input\n                        (focusout)=\"contr!.show = false\"\n                        type=\"number\"\n                        [formControl]=\"contr.control\"\n                        autofocus\n                      />\n                    </ng-container>\n                    <ng-template #genericInput>\n                      <input\n                        (focusout)=\"contr!.show = false\"\n                        [type]=\"contr.type\"\n                        [formControl]=\"contr.control\"\n                        (keydown.tab)=\"goToNextCell($event, row, column)\"\n                        autofocus\n                      />\n                    </ng-template>\n                  </ng-container>\n                  <ng-template #plainTextCell>\n                    <span class=\"ajf-table-cell\" (click)=\"goToCell(row, column)\"\n                      >{{ contr.control!.value | ajfTranslateIfString |\n                      ajfFormatIfNumber: '.0-2' }}</span\n                    >\n                  </ng-template>\n                </ng-container>\n              </ng-container>\n            </ng-template>\n          </td>\n        </ng-container>\n      </tr>\n    </ng-container>\n  </ng-container>\n</table>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'textarea-field.html',\n  styleUrls: ['textarea-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfTextareaFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ion-textarea *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></ion-textarea>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfBaseFieldComponent,\n  AjfFormRendererService,\n} from '@ajf/core/forms';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'time-field.html',\n  styleUrls: ['time-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfTimeFieldComponent extends AjfBaseFieldComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n  ) {\n    super(cdr, service, was);\n  }\n}\n","<ajf-time *ngIf=\"control|async as ctrl\" [formControl]=\"ctrl!\"></ajf-time>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AJF_WARNING_ALERT_SERVICE,\n  AjfFormRendererService,\n  AjfVideoUrlFieldComponent as CoreComponent,\n} from '@ajf/core/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@Component({\n  templateUrl: 'video-url-field.html',\n  styleUrls: ['video-url-field.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AjfVideoUrlFieldComponent extends CoreComponent {\n  constructor(\n    cdr: ChangeDetectorRef,\n    service: AjfFormRendererService,\n    @Inject(AJF_WARNING_ALERT_SERVICE) was: AjfWarningAlertService,\n    domSanitizer: DomSanitizer,\n    httpClient: HttpClient,\n  ) {\n    super(cdr, service, was, domSanitizer, httpClient);\n  }\n}\n","<ng-container *ngIf=\"control|async as ctrl\">\n  <ion-input class=\"ajf-video-input\" [formControl]=\"ctrl!\"></ion-input>\n  <div class=\"ajf-video-thumbnail\">\n    <ng-container *ngIf=\"validUrl|async\">\n      <a target=\"_blank\" [href]=\"ctrl.value\">\n        <img *ngIf=\"videoThumbnail|async as thumb\" [src]=\"thumb\" class=\"\" alt=\"\">\n      </a>\n    </ng-container>\n  </div>\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {\n  AjfFieldService as CoreService,\n  AjfFieldType,\n  AjfFileFieldComponent,\n  AjfImageFieldComponent,\n  AjfReadOnlyFieldComponent,\n  AjfReadOnlyFileFieldComponent,\n  AjfReadOnlyImageFieldComponent,\n  AjfReadOnlySelectFieldComponent,\n  AjfReadOnlyTableFieldComponent,\n  AjfReadOnlyVideoUrlFieldComponent,\n} from '@ajf/core/forms';\nimport {Injectable} from '@angular/core';\n\nimport {AjfBarcodeFieldComponent} from './barcode-field';\nimport {AjfBooleanFieldComponent} from './boolean-field';\nimport {AjfDateFieldComponent} from './date-field';\nimport {AjfDateInputFieldComponent} from './date-input-field';\nimport {AjfEmptyFieldComponent} from './empty-field';\nimport {AjfFormulaFieldComponent} from './formula-field';\nimport {AjfInputFieldComponent} from './input-field';\nimport {AjfMultipleChoiceFieldComponent} from './multiple-choice-field';\nimport {AjfNumberFieldComponent} from './number-field';\nimport {AjfRangeFieldComponent} from './range-field';\nimport {AjfSingleChoiceFieldComponent} from './single-choice-field';\nimport {AjfTableFieldComponent} from './table-field';\nimport {AjfTextareaFieldComponent} from './textarea-field';\nimport {AjfTimeFieldComponent} from './time-field';\nimport {AjfVideoUrlFieldComponent} from './video-url-field';\n\n@Injectable({providedIn: 'root'})\nexport class AjfFieldService extends CoreService {\n  constructor() {\n    super();\n    this.componentsMap[AjfFieldType.String] = {\n      component: AjfInputFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Text] = {\n      component: AjfTextareaFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Number] = {\n      component: AjfNumberFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Boolean] = {\n      component: AjfBooleanFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Formula] = {\n      component: AjfFormulaFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Date] = {\n      component: AjfDateFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.DateInput] = {\n      component: AjfDateInputFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Table] = {\n      component: AjfTableFieldComponent,\n      readOnlyComponent: AjfReadOnlyTableFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Empty] = {\n      component: AjfEmptyFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.SingleChoice] = {\n      component: AjfSingleChoiceFieldComponent,\n      readOnlyComponent: AjfReadOnlySelectFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.MultipleChoice] = {\n      component: AjfMultipleChoiceFieldComponent,\n      readOnlyComponent: AjfReadOnlySelectFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Time] = {\n      component: AjfTimeFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Barcode] = {\n      component: AjfBarcodeFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.File] = {\n      component: AjfFileFieldComponent,\n      readOnlyComponent: AjfReadOnlyFileFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Image] = {\n      component: AjfImageFieldComponent,\n      readOnlyComponent: AjfReadOnlyImageFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.VideoUrl] = {\n      component: AjfVideoUrlFieldComponent,\n      readOnlyComponent: AjfReadOnlyVideoUrlFieldComponent,\n    };\n    this.componentsMap[AjfFieldType.Range] = {\n      component: AjfRangeFieldComponent,\n      readOnlyComponent: AjfReadOnlyFieldComponent,\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFieldComponentsMap, AjfFormField as CoreFormField} from '@ajf/core/forms';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {AjfFieldService} from './field-service';\n\n@Component({\n  selector: 'ajf-field,ajf-form-field',\n  templateUrl: 'field.html',\n  styleUrls: ['field.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AjfFormField extends CoreFormField {\n  readonly componentsMap: AjfFieldComponentsMap;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    cfr: ComponentFactoryResolver,\n    fieldService: AjfFieldService,\n  ) {\n    super(cdr, cfr);\n    this.componentsMap = fieldService.componentsMap;\n  }\n\n  static ngAcceptInputType_readonly: BooleanInput;\n}\n","<div\n    [ngClass]=\"'ajf-field-' + (instance|ajfNodeCompleteName)\"\n    [class.ajf-validated]=\"instance.validationResults|ajfFieldIsValid\"\n>\n  <ng-template ajf-field-host></ng-template>\n</div>\n<ng-container *ngIf=\"instance.node.attachments\">\n  <ng-container *ngFor=\"let attachment of instance.node.attachments\">\n    <a [href]=\"attachment.value\" target=\"_blank\">{{attachment.label}}</a>\n  </ng-container>\n</ng-container>\n<ng-container *ngIf=\"!readonly && instance.validationResults\">\n  <div class=\"ajf-errors\">\n    <ng-container *ngFor=\"let res of instance.validationResults\">\n      <div class=\"error\" *ngIf=\"!res.result\">\n        {{ res.error | transloco }}\n      </div>\n    </ng-container>\n  </div>\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ajf-ion-popover',\n  template: `<span>{{hint}}</span>`,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AjfPopover {\n  @Input('hint') hint: string;\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {Directive} from '@angular/core';\n\n@Directive({selector: '[ajfFormPage]'})\nexport class AjfFormPage {}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfFormRenderer as AjfCoreFormRenderer, AjfFormRendererService} from '@ajf/core/forms';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {PopoverController} from '@ionic/angular';\nimport {Subscription} from 'rxjs';\nimport {delayWhen, switchMap} from 'rxjs/operators';\nimport {AjfPopover} from './popover';\n\n@Component({\n  selector: 'ajf-form',\n  templateUrl: 'form.html',\n  styleUrls: ['form.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n/**\n * This class will define an ajf form renderer\n * @implements : AfterViewInit\n * @implements : AfterViewInit\n */\nexport class AjfFormRenderer extends AjfCoreFormRenderer implements AfterViewInit, OnDestroy {\n  @Input() topBar: boolean = false;\n\n  private _longSlide = false;\n  get longSlide(): boolean {\n    return this._longSlide;\n  }\n\n  private _viewInitEvt: EventEmitter<void> = new EventEmitter<void>();\n  private _scrollFinishSub: Subscription = Subscription.EMPTY;\n\n  constructor(\n    rendererService: AjfFormRendererService,\n    cdr: ChangeDetectorRef,\n    public popoverController: PopoverController,\n  ) {\n    super(rendererService, cdr);\n\n    this._scrollFinishSub = this._viewInitEvt\n      .pipe(\n        delayWhen(() => this.formGroup),\n        switchMap(() => this.formSlider.pageScrollFinish),\n      )\n      .subscribe(_ => this._updateLongSlide());\n  }\n\n  override ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    this._viewInitEvt.emit();\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._scrollFinishSub.unsubscribe();\n  }\n\n  openPopover(ev: any, hint: string): void {\n    const popover = this.popoverController.create({\n      component: AjfPopover,\n      cssClass: 'ajf-popover',\n      translucent: true,\n      event: ev,\n      componentProps: {hint},\n    });\n    popover.then(pop => pop.present());\n  }\n\n  private _updateLongSlide(): void {\n    const longSlide = this.formSlider.isCurrentPageLong();\n    if (longSlide !== this._longSlide) {\n      this._longSlide = longSlide;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  static ngAcceptInputType_fixedOrientation: BooleanInput;\n  static ngAcceptInputType_hasEndMessage: BooleanInput;\n  static ngAcceptInputType_hasStartMessage: BooleanInput;\n  static ngAcceptInputType_hideBottomToolbar: BooleanInput;\n  static ngAcceptInputType_hideNavigationButtons: BooleanInput;\n  static ngAcceptInputType_hideTopToolbar: BooleanInput;\n  static ngAcceptInputType_saveDisabled: BooleanInput;\n  static ngAcceptInputType_readonly: BooleanInput;\n}\n","<ng-container *ngIf=\"formGroup|async as currentFormGroup\">\n  <form novalidate [formGroup]=\"currentFormGroup!\">\n    <div class=\"ajf-form-container\">\n      <ion-toolbar *ngIf=\"!hideTopToolbar && topBar\" class=\"ajf-btn-strip\">\n        <div class=\"ajf-topbar-buttons\">\n          <ng-container *ngFor=\"let slideInstance of (slides|async)\">\n            <ion-button\n              class=\"ajf-topbar-button\"\n              *ngIf=\"slideInstance.node != null && slideInstance.node.label != null && slideInstance.node.label.length > 0\"\n              (click)=\"scrollToSlide(slideInstance)\"\n              >{{slideInstance.node.label | transloco}}</ion-button\n            >\n          </ng-container>\n        </div>\n      </ion-toolbar>\n      <ion-toolbar *ngIf=\"!hideTopToolbar\">\n        {{ title | transloco }}\n        <ion-buttons slot=\"end\">\n          <!-- this content projection  allow to add buttons on toolbar-->\n          <ng-content select=\"[ajfFormTopToolbarButtons]\"></ng-content>\n          <!-- apply a default save button only when ajfFormSaveButton is empty-->\n          <span *ngIf=\"!saveDisabled\" (click)=\"onSave($event)\">\n            <span #saveButton\n              ><ng-content select=\"[ajfFormSaveButton]\"></ng-content\n            ></span>\n            <ion-button\n              *ngIf=\"saveButton != null  && saveButton.childNodes != null && saveButton.childNodes.length == 0\"\n              >{{ 'Save' | transloco }}</ion-button\n            >\n          </span>\n        </ion-buttons>\n      </ion-toolbar>\n      <div class=\"ajf-slider-container\">\n        <ajf-page-slider\n          (orientationChange)=\"orientationChangeHandler($event)\"\n          [hideNavigationButtons]=\"hideNavigationButtons\"\n          [fixedOrientation]=\"fixedOrientation\"\n          [orientation]=\"orientation\"\n          #formSlider\n        >\n          <ng-container *ngIf=\"(slides|async) as curSlides\">\n            <ng-container\n              *ngIf=\"curSlides && curSlides!.length > 0 && hasStartMessage\"\n            >\n              <ajf-page-slider-item>\n                <div ajfFormPage class=\"ajf-form-page\">\n                  <ion-card>\n                    <ion-card-header>\n                      <div class=\"ajf-page-slider-item-header\">\n                        <h2>\n                          <span class=\"ajf-form-header-number\"> 1 &rarr; </span>\n                          <span class=\"ajf-title\">\n                            <ng-content\n                              select=\"[ajfFormStartMessageTitle]\"\n                            ></ng-content>\n                          </span>\n                        </h2>\n                      </div>\n                    </ion-card-header>\n                    <ion-card-content>\n                      <ng-content select=\"[ajfFormStartMessage]\"></ng-content>\n                    </ion-card-content>\n                  </ion-card>\n                </div>\n              </ajf-page-slider-item>\n            </ng-container>\n            <ng-container\n              *ngFor=\"let slideInstance of curSlides; trackBy: trackNodeById\"\n            >\n              <ng-container\n                *ngIf=\"(!(slideInstance|ajfIsRepeatingSlideInstance)) && slideInstance.visible\"\n              >\n                <ajf-page-slider-item>\n                  <div ajfFormPage class=\"ajf-form-page\">\n                    <ion-card>\n                      <ion-card-header>\n                        <div class=\"ajf-page-slider-item-header\">\n                          <h2>\n                            <span class=\"ajf-form-header-number\"\n                              >{{ slideInstance.position + (hasStartMessage |\n                              ajfBoolToInt) }} &rarr;</span\n                            >\n                            <span class=\"ajf-title\"\n                              >{{ slideInstance.node.label | transloco}}</span\n                            >\n                          </h2>\n                          <ion-icon\n                            color=\"danger\"\n                            name=\"warning\"\n                            *ngIf=\"!slideInstance.valid\"\n                          ></ion-icon>\n                          <ion-icon\n                            color=\"secondary\"\n                            name=\"checkmark\"\n                            *ngIf=\"slideInstance.valid\"\n                          ></ion-icon>\n                        </div>\n                      </ion-card-header>\n                      <ion-card-content>\n                        <ng-container\n                          *ngFor=\"let fieldInstance of slideInstance.flatNodes; trackBy: trackNodeById\"\n                        >\n                          <div\n                            [ngClass]=\"'ajf-' + (fieldInstance|ajfAsFieldInstance).node.size\"\n                            class=\"ajf-field-entry\"\n                            *ngIf=\"fieldInstance.visible\"\n                          >\n                            <i\n                              [class]=\"(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon\"\n                              item-right\n                            ></i>\n                            <p>\n                              {{\n                              (fieldInstance|ajfAsFieldInstance).node.description\n                              }}\n                            </p>\n                            <ion-label\n                              [innerHTML]=\"fieldInstance.node.label | transloco\"\n                            ></ion-label>\n                            <ion-icon\n                              *ngIf=\"(fieldInstance|ajfAsFieldInstance).node?.hint as hint\"\n                              [name]=\"(fieldInstance|ajfAsFieldInstance).node?.hintIcon || 'help-outline'\"\n                              (click)=\"openPopover($event, hint)\"\n                            ></ion-icon>\n                            <ajf-field\n                              [instance]=\"fieldInstance|ajfAsFieldInstance\"\n                              [readonly]=\"readonly || !slideInstance.editable\"\n                            >\n                            </ajf-field>\n                          </div>\n                        </ng-container>\n                      </ion-card-content>\n                    </ion-card>\n                  </div>\n                </ajf-page-slider-item>\n              </ng-container>\n              <ng-container\n                *ngIf=\"(slideInstance|ajfIsRepeatingSlideInstance) && slideInstance.visible\"\n              >\n                <ajf-page-slider-item\n                  *ngFor=\"let curRep of ((slideInstance|ajfAsRepeatingSlideInstance).reps|ajfRange); let idx = index; let lastSlide = last\"\n                >\n                  <div ajfFormPage class=\"ajf-form-page\">\n                    <ion-card>\n                      <ion-card-header>\n                        <div class=\"ajf-page-slider-item-header\">\n                          <h2>\n                            <span class=\"ajf-form-header-number\"\n                              >{{ slideInstance.position|ajfIncrement:idx }}\n                              &rarr;</span\n                            >\n                            <span class=\"ajf-title\"\n                              >{{ slideInstance.node.label | transloco }}</span\n                            >\n                          </h2>\n                          <ion-icon\n                            color=\"danger\"\n                            name=\"ajf-warning\"\n                            *ngIf=\"!(slideInstance|ajfValidSlide:idx)\"\n                          ></ion-icon>\n                          <ion-icon\n                            color=\"secondary\"\n                            name=\"checkmark\"\n                            *ngIf=\"(slideInstance|ajfValidSlide:idx)\"\n                          ></ion-icon>\n                        </div>\n                        <div\n                          *ngIf=\"lastSlide && !readonly\"\n                          class=\"ajf-group-actions\"\n                        >\n                          <ion-fab-button\n                            size=\"small\"\n                            (click)=\"addGroup(slideInstance)\"\n                            [disabled]=\"!(slideInstance|ajfAsRepeatingSlideInstance).canAdd || ((slideInstance|ajfAsRepeatingSlideInstance).node?.disableRemoval && !slideInstance.valid)\"\n                          >\n                            <ion-icon name=\"add\"></ion-icon>\n                          </ion-fab-button>\n                          <ion-fab-button\n                            size=\"small\"\n                            (click)=\"removeGroup(slideInstance)\"\n                            [disabled]=\"!(slideInstance|ajfAsRepeatingSlideInstance).canRemove || (slideInstance|ajfAsRepeatingSlideInstance).node?.disableRemoval\"\n                          >\n                            <ion-icon name=\"remove\"></ion-icon>\n                          </ion-fab-button>\n                        </div>\n                      </ion-card-header>\n                      <ion-card-content>\n                        <ng-container\n                          *ngFor=\"let fieldInstance of slideInstance.slideNodes[idx]; trackBy: trackNodeById\"\n                        >\n                          <div\n                            [ngClass]=\"'ajf-' + (fieldInstance|ajfAsFieldInstance).node.size\"\n                            class=\"ajf-field-entry\"\n                            *ngIf=\"fieldInstance.visible\"\n                          >\n                            <i\n                              [class]=\"(fieldInstance|ajfAsFieldInstance).node.fieldType | ajfFieldIcon\"\n                              item-right\n                            ></i>\n                            <p>\n                              {{\n                              (fieldInstance|ajfAsFieldInstance).node.description\n                              }}\n                            </p>\n                            <ion-label\n                              [innerHTML]=\"fieldInstance.node.label | transloco\"\n                            ></ion-label>\n                            <ajf-field\n                              [instance]=\"fieldInstance|ajfAsFieldInstance\"\n                              [readonly]=\"readonly || (!lastSlide && (slideInstance|ajfAsRepeatingSlideInstance).node?.disableRemoval)\"\n                            ></ajf-field>\n                          </div>\n                        </ng-container>\n                        <div\n                          *ngIf=\"lastSlide && longSlide\"\n                          class=\"ajf-group-actions ajf-group-actions-bottom\"\n                        >\n                          <ion-fab-button\n                            size=\"small\"\n                            (click)=\"addGroup(slideInstance)\"\n                            [disabled]=\"!(slideInstance|ajfAsRepeatingSlideInstance).canAdd\"\n                            mat-mini-fab\n                          >\n                            <ion-icon name=\"add\"></ion-icon>\n                          </ion-fab-button>\n                          <ion-fab-button\n                            size=\"small\"\n                            (click)=\"removeGroup(slideInstance)\"\n                            [disabled]=\"!(slideInstance|ajfAsRepeatingSlideInstance).canRemove\"\n                            mat-mini-fab\n                          >\n                            <ion-icon name=\"remove\"></ion-icon>\n                          </ion-fab-button>\n                        </div>\n                      </ion-card-content>\n                    </ion-card>\n                  </div>\n                </ajf-page-slider-item>\n              </ng-container>\n            </ng-container>\n            <ng-container\n              *ngIf=\"curSlides && curSlides!.length > 0 && hasEndMessage\"\n            >\n              <ajf-page-slider-item>\n                <div ajfFormPage class=\"ajf-form-page\">\n                  <ion-card>\n                    <ion-card-header>\n                      <div class=\"ajf-page-slider-item-header\">\n                        <h2>\n                          <span\n                            *ngIf=\"(slidesNum|async) as snum\"\n                            class=\"ajf-form-header-number\"\n                          >\n                            {{ snum! + (hasStartMessage | ajfBoolToInt) + 1 }}\n                            &rarr;\n                          </span>\n                          <span class=\"ajf-title\">\n                            <ng-content\n                              select=\"[ajfFormEndMessageTitle]\"\n                            ></ng-content>\n                          </span>\n                        </h2>\n                      </div>\n                    </ion-card-header>\n                    <ion-card-content>\n                      <ng-content select=\"[ajfFormEndMessage]\"></ng-content>\n                    </ion-card-content>\n                  </ion-card>\n                </div>\n              </ajf-page-slider-item>\n            </ng-container>\n          </ng-container>\n          <div ajfPageSliderBar *ngIf=\"!hideBottomToolbar\">\n            <div class=\"ajf-left-bar\">\n              <ion-buttons\n                class=\"ajf-errors\"\n                *ngIf=\"((errors | async) || 0) > 0\"\n              >\n                <ion-button (click)=\"goToPrevError()\" color=\"danger\">\n                  <ion-icon name=\"arrow-up\"></ion-icon>\n                </ion-button>\n                <ion-button (click)=\"goToNextError()\" color=\"danger\">\n                  <ion-icon name=\"arrow-down\"></ion-icon>\n                </ion-button>\n              </ion-buttons>\n              <div class=\"ajf-info-box ajf-error\">\n                <div class=\"ajf-title\">{{'Errors'|transloco}}</div>\n                <div class=\"ajf-content\">\n                  {{ errors | async }} / {{ slidesNum|async }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </ajf-page-slider>\n      </div>\n    </div>\n  </form>\n</ng-container>\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nimport {AjfCommonModule} from '@ajf/core/common';\nimport {AJF_WARNING_ALERT_SERVICE, AjfFormsModule as AjfCoreFormsModule} from '@ajf/core/forms';\nimport {AjfTranslocoModule} from '@ajf/core/transloco';\nimport {AjfBarcodeModule} from '@ajf/ionic/barcode';\nimport {AjfCalendarModule} from '@ajf/ionic/calendar';\nimport {AjfCheckboxGroupModule} from '@ajf/ionic/checkbox-group';\nimport {AjfPageSliderModule} from '@ajf/ionic/page-slider';\nimport {AjfTimeModule} from '@ajf/ionic/time';\nimport {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {GicModule} from '@gic/angular';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AjfBarcodeFieldComponent} from './barcode-field';\nimport {AjfBooleanFieldComponent} from './boolean-field';\nimport {AjfDateFieldComponent} from './date-field';\nimport {AjfDateInputFieldComponent} from './date-input-field';\nimport {AjfEmptyFieldComponent} from './empty-field';\nimport {AjfFormField} from './field';\nimport {AjfFieldService} from './field-service';\nimport {AjfFormRenderer} from './form';\nimport {AjfFormPage} from './form-page';\nimport {AjfFormulaFieldComponent} from './formula-field';\nimport {AjfInputFieldComponent} from './input-field';\nimport {AjfMultipleChoiceFieldComponent} from './multiple-choice-field';\nimport {AjfNumberFieldComponent} from './number-field';\nimport {AjfPopover} from './popover';\nimport {AjfRangeFieldComponent} from './range-field';\nimport {AjfSelectHasSearchBarPipe} from './select-has-search-bar.pipe';\nimport {AjfSelectUseVirtualScroll} from './select-use-virtual-scroll.pipe';\nimport {AjfSingleChoiceFieldComponent} from './single-choice-field';\nimport {AjfTableFieldComponent} from './table-field';\nimport {AjfTextareaFieldComponent} from './textarea-field';\nimport {AjfTimeFieldComponent} from './time-field';\nimport {AjfVideoUrlFieldComponent} from './video-url-field';\nimport {AjfWarningAlertService} from './warning-alert-service';\n\n@NgModule({\n  imports: [\n    AjfBarcodeModule,\n    AjfCalendarModule,\n    AjfCheckboxGroupModule,\n    AjfCommonModule,\n    AjfCoreFormsModule,\n    AjfPageSliderModule,\n    AjfTimeModule,\n    CommonModule,\n    FormsModule,\n    GicModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AjfTranslocoModule,\n  ],\n  declarations: [\n    AjfBarcodeFieldComponent,\n    AjfBooleanFieldComponent,\n    AjfDateFieldComponent,\n    AjfDateInputFieldComponent,\n    AjfEmptyFieldComponent,\n    AjfFormField,\n    AjfFormPage,\n    AjfFormRenderer,\n    AjfFormulaFieldComponent,\n    AjfInputFieldComponent,\n    AjfMultipleChoiceFieldComponent,\n    AjfNumberFieldComponent,\n    AjfPopover,\n    AjfRangeFieldComponent,\n    AjfSelectHasSearchBarPipe,\n    AjfSelectUseVirtualScroll,\n    AjfSingleChoiceFieldComponent,\n    AjfTableFieldComponent,\n    AjfTextareaFieldComponent,\n    AjfTimeFieldComponent,\n    AjfVideoUrlFieldComponent,\n  ],\n  entryComponents: [\n    AjfBarcodeFieldComponent,\n    AjfBooleanFieldComponent,\n    AjfDateFieldComponent,\n    AjfDateInputFieldComponent,\n    AjfEmptyFieldComponent,\n    AjfFormulaFieldComponent,\n    AjfInputFieldComponent,\n    AjfMultipleChoiceFieldComponent,\n    AjfNumberFieldComponent,\n    AjfPopover,\n    AjfRangeFieldComponent,\n    AjfSingleChoiceFieldComponent,\n    AjfTableFieldComponent,\n    AjfTextareaFieldComponent,\n    AjfTimeFieldComponent,\n    AjfVideoUrlFieldComponent,\n  ],\n  exports: [AjfFormField, AjfFormRenderer],\n  providers: [\n    AjfFieldService,\n    {provide: AJF_WARNING_ALERT_SERVICE, useClass: AjfWarningAlertService},\n  ],\n})\nexport class AjfFormsModule {\n  static forRoot(): ModuleWithProviders<AjfFormsModule> {\n    return {\n      ngModule: AjfFormsModule,\n      providers: [AjfFieldService],\n    };\n  }\n}\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './boolean-field';\nexport * from './date-field';\nexport * from './date-input-field';\nexport * from './empty-field';\nexport * from './field';\nexport * from './field-service';\nexport * from './input-field';\nexport * from './form';\nexport * from './forms-module';\nexport * from './multiple-choice-field';\nexport * from './number-field';\nexport * from './range-field';\nexport * from './single-choice-field';\nexport * from './table-field';\nexport * from './textarea-field';\nexport * from './time-field';\nexport * from './warning-alert-service';\n","/**\n * @license\n * Copyright (C) Gnucoop soc. coop.\n *\n * This file is part of the Advanced JSON forms (ajf).\n *\n * Advanced JSON forms (ajf) is free software: you can redistribute it and/or\n * modify it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * Advanced JSON forms (ajf) is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero\n * General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with Advanced JSON forms (ajf).\n * If not, see http://www.gnu.org/licenses/.\n *\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["CoreComponent","AjfCoreTableFieldComponent","CoreService","CoreFormField","AjfCoreFormRenderer","AjfCoreFormsModule"],"mappings":"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"}